数据缺失的种类
	• 完全随机缺失（MCAR）跟其他所有变量都无关
	• 随机缺失（MAR）缺失的情况会依赖于其他的变量，比如时间数据经常是一起缺失、小公司的财务数据经常缺失
	• 非随机缺失（MNAR）缺失情况是跟自己的取值相关
		没办法找出关系



处理方法
	• 不处理
		若采用树模型可以直接不处理
			1. Xgboost 会直接计算缺失值在两边得到的Gain来做叶子分裂（这是否符合逻辑？）
		其他模型必须处理
			做DM的时候，必须处理来开发一些Baseline。
		○ 由于必须开发Baseline模型的测试，不会不做处理。最后可以对于做处理的模型和不做处理的同时做树模型，取效果好的。
		
	• 删掉数据项/特征
		删掉数据项
			1. 确保非平衡数据集，并且在缺失值应该远小于该项数据集，同时数据集的特征维数不能太高（否则会导致其他重要的特征被删）
			例如小于5个数据的缺失，此时添加虚拟变量增加维度带来的计算量不值得这么做
			2. 如果test集存在类似缺失，不能做删除数据的操作，否则无法预测相应的数据集！
		删掉特征
			1. 最好不要这么做，会丢失大量的信息。最后如果无法改进再考虑。
		
	• 填补数据集
		○ 缺失少量数据，少于0.01%（约1万对1）。
			§ 采用特殊值填充/ 聚类填充
			§ 注意分析取值情况，确保为平衡数据集
				□ 如果是非平衡，聚类引发的噪声会很大，此时采用One-Hot
		○ 缺失10-20%
			§ 做多组填充都放进去
				□ 如果维度爆炸可以考虑做预处理降维-PCA？
		○ 缺失20%以上
			§ 做One-hot/哑变量，保留信息
		
	

One-hot
	• 连续变量怎么做one-hot？
	• 为什么做onehot
		○ 基于距离的判别模型会对无差异的类别之间的距离产生误判
	• 树模型在特征维度高的情况下，不适合用One Hot
		○ 分类变量维度在[10,100]可以考虑，并且分布平衡
		○ 在样本量一定的情况下，如果维度高，会导致每个变量都需要做一次分支，很容易过拟合

哑变量和One-Hot的区别
	• 哑变量比one-hot少一个变量
	• One-hot需要用正则化，否则会出现两个模型等价，多个最优点的情形


特殊值填充方法——
999填充
	• 全部填充一个很大的数据。
		○ 这种方法默认为所有缺失的都是一类值，在数据缺失较大的时候会有明显的偏向性。
		○ 但是如果相同缺失的性质相似，可以考虑。

无脑填充
	• 直接用所有可能得取值全部试一遍
		1. 这带来的维度扩张是灾难性的，连续的更可怕
		2. 在缺失量大的时候，这个方法有把所有缺失数据假设为一类的倾向。
		

均值填充
	• 不适用分类变量，因为均值可能没有分类意义。
		○ 分类变量用无条件概率众数，或者是有预测值取值的条件概率众数，连续型直接均值填充
	• 适用少量缺失。大量缺失情况下用，会导致方差变小，减小整体的信息量。
		○ 例：缺失值=50%，方差为原来70%。缺失10%,方差损失5%。
	• 优点在于不会改变样本均值
	• 会改变样本偏度（具体不知道改变情况，需要画图判断）

插值
	• 连续的时序变量出现缺失时考虑

预测值填充——

聚类填充
	• 本质上也是做均值填充
	• 区别在于均值填充是直接采用众数，只利用单个变量的信息。聚类可以用其他的信息来判断是否相关。
	• 聚类方法出现的问题
		○ 距离的定义怎么选择
			§ 欧式距离是不可能的，这辈子都不可能用欧式距离的٩(๑❛ᴗ❛๑)۶ 
	• k-means cluster
		○ （？原理 & 优缺点）

线性回归
	• 可以用其他非缺失值做预测
	• 目前讨论：做的好，很可能就是共线性；做得不好，会引入噪声
		○ R^2到0.7左右的时候，这很可能就是数据集的原有性质，即使存在共线性，也和填充的数据关系不大。
			§ （如果可以用线性回归做出好的预测效果，为什么不能用其他拟合能力更好的模型？）
				□ 例如为什么不用Random Forest
			§ （分类变量和连续变量在一起的线性回归要怎么做？）
		○ R^2没有很高的时候，不适用。

EM Algorithm
	• （原理？）

Random Forest
	• 原理
 
多重填补




Chi-Square test
	（具体的证明?)
	
	适合分类变量做检验，类之间需要独立（不独立怎么做？）
		
	分级变量不适合（用什么检验？）
	
	小数据量要求不严格。因为随机性因素很大，例如n=15时候无法拒绝，但如果n=75就可以很好的拒绝原假设。
	大数据量要求过于严格。即使是实用性看来可以接受的，统计量也会加以拒绝。
	——因此如果大数据量下被拒绝，需要做进一步的检验（如何做？）
	


